{"version":3,"sources":["data/Players.js","components/TopicsTable.js","helpers/constants.js","components/Round.js","components/Question.js","components/TopicRow.js","components/Score.js","components/Topic.js","components/GameBoard.js","components/FinalRound.js","components/FinalScore.js","components/MainBoard.js","components/Loading.js","helpers/parsers.js","components/Registration.js","App.js","serviceWorker.js","index.js"],"names":["Player","name","score","isActive","this","TopicsTable","props","topics","hideAllTopics","className","onClick","map","t","i","key","corsProxy","VALUES","ANSWER_SECONDS","Round","hideRound","round","Question","question","answer","limitedTime","goToGameBoard","playersAnswers","isFinalRound","useState","showAnswer","setShowAnswer","timeLeft","setTimeLeft","isPause","setIsPause","needShowAnswer","some","a","useEffect","timerId","setTimeout","clearInterval","ProgressBar","animated","variant","now","min","max","Button","block","TopicRow","topicIndex","topic","handleQuestionSelect","rowPlayedQuestions","values","valuesCells","v","questionIndex","Score","players","canAnswer","handlePlayerAnswer","changeScore","setShowFinalScore","questionValue","editingScore","setEditingScore","editingIndex","setEditingIndex","showEditScore","setShowEditScore","playersScores","p","disabled","index","handleHideEditScore","Modal","show","onHide","centered","onShow","document","getElementById","select","Header","closeButton","Title","Body","Form","Control","id","type","value","onChange","e","target","Footer","Topic","topicName","GameBoard","updateScore","roundData","showingTopicIndex","setShowingTopicIndex","Array","fill","playedQuestions","setPlayedQuestions","selectedTopicIndex","setSelectedTopicIndex","selectedQuestionIndex","setSelectedQuestionIndex","length","setPlayersAnswers","showCat","setShowCat","catTopic","setCatTopic","catPlayerIndex","setCatPlayerIndex","catValue","setCatValue","showAuction","setShowAuction","auctionPlayerIndex","setAuctionPlayerIndex","auctionValue","setAuctionValue","clearTimeout","isQuestionSelected","questions","isCat","isAuction","newPlayedQuestions","row","slice","every","el","catPlayers","canPlayAuction","getAuctionMinValue","getAuctionMaxValue","Math","auctionPlayers","topicsRows","td","showQuestion","playerIndex","isCorrect","addScore","newPlayersAnswers","Object","assign","backdrop","Group","Label","htmlFor","as","step","FinalRound","finalRoundData","setQuestions","finalQuestion","setFinalQuestion","q","filter","Container","isLimitedTime","FinalScore","updateRound","to","pathname","MainBoard","location","playersNames","questionsPackage","pn","setPlayers","showAllTopics","setShowAllTopics","setRound","showRound","setShowRound","showFinalScore","rounds","r","reduce","res","cur","ROUNDS_COUNT","finalRound","history","push","newScore","newPlayers","isSpecialQuestion","Loading","Spinner","animation","parseUserFile","userFile","file","Promise","resolve","reject","reader","FileReader","onload","ev","qp","JSON","parse","result","Error","readAsText","parseSelectedPackage","selectedPackageId","fetch","respose","json","pack","data","tours","dataTopics","d","split","dataQuestions","dataAnswers","j","k","Registration","selectedPlayer","setSelectedPlayer","lastPlayerIndex","setLastPlayerIndex","showNewPlayer","setShowNewPlayer","newPlayerName","setNewPlayerName","packageSource","setPackageSource","setLimitedTime","isLoading","setIsLoading","packages","setPackages","userFileName","setUserFileName","selectedPackegeId","setSelectedPackageId","questionPackage","setQuestionPackage","showError","setShowError","errorMessage","setErrorMessage","handleHideError","handleHideNewPlayer","playersInputs","ListGroup","Item","active","packagesOptions","title","answerSecondsOptions","Row","Col","sm","splice","ToggleButtonGroup","then","response","obj","finally","ToggleButton","accept","files","message","required","data-browse","href","download","placeholder","App","basename","process","exact","path","render","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c505a424.chunk.js","sourcesContent":["export default class Player{\r\n    constructor(name, score, isActive){\r\n        this.name = name;\r\n        this.score = score;\r\n        this.isActive = isActive;\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function TopicsTable(props){\r\n    const { topics, hideAllTopics } = props\r\n  \r\n    return(\r\n        <div className='topics-table' onClick={hideAllTopics}>\r\n            {topics.map((t,i) => <div className='topics-table-cell' key={i}>{t}</div>)}\r\n        </div>\r\n    )\r\n}","export const ROUNDS_COUNT = 3\r\nexport const ROUND_TOPICS_COUNT = 6\r\nexport const TOPIC_QUESTIONS_COUNT = 5\r\n\r\nexport const SHOW_TOPICS_TIME_MSECS = 1000\r\nexport const FINAL_ROUND_TIME_SECS = 60\r\n\r\nexport const corsProxy = 'https://cors-anywhere.herokuapp.com/';\r\nexport const groupsApi = 'http://api.baza-voprosov.ru/groups/SVOYAK';\r\nexport const packageApi = 'http://api.baza-voprosov.ru/packages/';\r\n\r\nexport const VALUES = [100, 200, 300, 400, 500]\r\nexport const ANSWER_SECONDS = [-1, 20, 30, 45, 60, 80, 120]","import React from 'react'\r\nimport {ROUNDS_COUNT} from './../helpers/constants'\r\n\r\nexport default function Round(props){\r\n    const {hideRound} = props;\r\n    return (\r\n        <div className='centered round' onClick={hideRound}>\r\n            {props.round <= ROUNDS_COUNT ? props.round : 'Финальный'} раунд\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Button, ProgressBar } from 'react-bootstrap'\r\n\r\nexport default function Question(props) {\r\n    const { question, answer, limitedTime, goToGameBoard, playersAnswers, isFinalRound } = props\r\n    const [showAnswer, setShowAnswer] = useState(false)\r\n    const [timeLeft, setTimeLeft] = useState(limitedTime)\r\n    const [isPause, setIsPause] = useState(false)\r\n\r\n\r\n    const needShowAnswer = showAnswer || playersAnswers.some(a => a === 1)\r\n\r\n    useEffect(() => {\r\n        if (needShowAnswer) return;\r\n        if (timeLeft <= 0) return;\r\n\r\n        if (isPause) return;\r\n        const timerId = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n        return () => clearInterval(timerId);\r\n    }, [timeLeft, isPause, needShowAnswer, isFinalRound])\r\n\r\n    const handlePauseClick = () => {\r\n        setIsPause(!isPause)\r\n    }\r\n\r\n    const handleAnswerClick = () => {\r\n        if (showAnswer) return\r\n        setShowAnswer(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"question\">\r\n            <div className='question-title'>{question}</div>\r\n\r\n            <div className={`answer ${!needShowAnswer ? 'hidden' : ''}`}>{answer}</div>\r\n\r\n            {limitedTime !== -1 &&\r\n                <ProgressBar animated variant='danger' className='pointer'\r\n                    now={limitedTime - timeLeft} min={0} max={limitedTime}\r\n                    onClick={handlePauseClick}\r\n                />\r\n            }\r\n\r\n            {!needShowAnswer && <Button variant='warning' block onClick={handleAnswerClick}>Показать ответ</Button>}\r\n            {needShowAnswer && goToGameBoard && <Button variant='warning' block onClick={() => goToGameBoard()}>Главный экран</Button>}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction TopicRow(props) {\r\n    const { topicIndex, topic, handleQuestionSelect, rowPlayedQuestions, values, round } = props;\r\n\r\n    const valuesCells = values.map((v, questionIndex) =>\r\n        rowPlayedQuestions[questionIndex] !== 1 ?\r\n            <div key={questionIndex} className=\"cell-value pointer\" onClick={() => handleQuestionSelect(topicIndex, questionIndex)}>\r\n                {v * round}\r\n            </div> :\r\n            <div key={questionIndex} className=\"cell-empty\"></div>)\r\n\r\n    return (\r\n        <div className='topicRow'>\r\n            <div className=\"topicName\">{topic.name}</div>\r\n            {valuesCells}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopicRow;","import React, { useState } from 'react'\r\nimport { Button, Modal, Form } from 'react-bootstrap'\r\n\r\nexport default function Score(props) {\r\n\r\n    const { players, canAnswer, handlePlayerAnswer, playersAnswers, changeScore, setShowFinalScore, questionValue } = props\r\n    const [editingScore, setEditingScore] = useState(0);\r\n    const [editingIndex, setEditingIndex] = useState(-1);\r\n    const [showEditScore, setShowEditScore] = useState(false);\r\n\r\n    const handleStartEdit = (score, index) => {\r\n        setEditingScore(score);\r\n        setEditingIndex(index);\r\n        setShowEditScore(true);\r\n    }\r\n   \r\n    const playersScores = players.map((p, i) => (\r\n        <div key={i} className={`player-info ${p.isActive ? 'is-current' : ''}`}>\r\n\r\n            <div className='player-name'>{p.name}</div>\r\n\r\n            {canAnswer && <Button\r\n                className='btn btn-danger rounded-circle change-score-button'\r\n                disabled={playersAnswers[i] !== 0 || playersAnswers.some(a => a === 1)}\r\n                onClick={() => handlePlayerAnswer(i, false, questionValue)}\r\n            >\r\n                <strong>-</strong>\r\n            </Button>}\r\n\r\n            <div className='player-score pointer' onClick={() => handleStartEdit(p.score, i)}>{p.score}</div>\r\n\r\n            {canAnswer && <Button\r\n                className='btn btn-warning rounded-circle change-score-button'\r\n                disabled={playersAnswers[i] !== 0 || playersAnswers.some(a => a === 1)}\r\n                onClick={() => handlePlayerAnswer(i, true, questionValue)}\r\n            >\r\n                <strong>+</strong>\r\n            </Button>}\r\n\r\n        </div>\r\n    ))\r\n\r\n    const handleHideEditScore = () => setShowEditScore(false);\r\n\r\n    const handleEditingScoreLoad = () => {\r\n        const editingScore = document.getElementById('editing-score');\r\n        editingScore.select();\r\n    }\r\n\r\n    const handleEditScore = () => {\r\n        changeScore(editingIndex, editingScore);\r\n        setShowEditScore(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='player-info-container'>\r\n            {playersScores}\r\n            <Button variant='danger' onClick={() => setShowFinalScore(true)}>Закончить раунд</Button>\r\n\r\n            <Modal show={showEditScore} onHide={handleHideEditScore} centered onShow={handleEditingScoreLoad}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Изменение счета</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Control id='editing-score' type=\"number\"\r\n                        value={editingScore} onChange={(e) => setEditingScore(+e.target.value)} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"warning\" onClick={handleEditScore}>\r\n                        Принять\r\n                        </Button>\r\n                    <Button variant=\"secondary\" onClick={handleHideEditScore}>\r\n                        Отмена\r\n                        </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Topic(props) {\r\n    return (\r\n        <div className='centered topic'>{props.topicName}</div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Question from './Question';\r\nimport TopicRow from './TopicRow';\r\nimport Score from './Score';\r\nimport Topic from './Topic';\r\nimport { ROUND_TOPICS_COUNT, TOPIC_QUESTIONS_COUNT, SHOW_TOPICS_TIME_MSECS, VALUES } from '../helpers/constants'\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nexport default function GameBoard(props) {\r\n\r\n\r\n    const { players, updateScore, round, roundData, limitedTime, changeScore, setShowFinalScore } = props\r\n\r\n    const [showingTopicIndex, setShowingTopicIndex] = useState(0)\r\n\r\n    const [playedQuestions, setPlayedQuestions] = useState(\r\n        new Array(ROUND_TOPICS_COUNT).fill(\r\n            new Array(TOPIC_QUESTIONS_COUNT).fill(0)))\r\n    // const [curQuestion, setCurQuestion] = useState(undefined)\r\n\r\n    const [selectedTopicIndex, setSelectedTopicIndex] = useState(-1)\r\n    const [selectedQuestionIndex, setSelectedQuestionIndex] = useState(-1)\r\n\r\n    //ответы игроков на текущий вопрос. 0 - не давал ответа, -1 - неправильный ответ, 1 - правильный ответ\r\n    const [playersAnswers, setPlayersAnswers] = useState(new Array(players.length).fill(0))\r\n\r\n    const [showCat, setShowCat] = useState(false);\r\n    const [catTopic, setCatTopic] = useState(\"\");\r\n    const [catPlayerIndex, setCatPlayerIndex] = useState(0);\r\n    const [catValue, setCatValue] = useState(VALUES[0] * round);\r\n\r\n    const [showAuction, setShowAuction] = useState(false);\r\n    const [auctionPlayerIndex, setAuctionPlayerIndex] = useState(0);\r\n    const [auctionValue, setAuctionValue] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (showingTopicIndex === -1) return;\r\n        const timerId = setTimeout(() =>\r\n            setShowingTopicIndex(showingTopicIndex < roundData.topics.length - 1\r\n                ? showingTopicIndex + 1\r\n                : -1),\r\n            SHOW_TOPICS_TIME_MSECS);\r\n        return () => clearTimeout(timerId)\r\n\r\n    }, [showingTopicIndex, roundData])\r\n\r\n    const handleQuestionSelect = (topicIndex, questionIndex) => {\r\n        let isQuestionSelected = topicIndex !== -1 && questionIndex !== -1;\r\n        setSelectedTopicIndex(topicIndex)\r\n        setSelectedQuestionIndex(questionIndex)\r\n\r\n        if (isQuestionSelected) {\r\n            if (roundData.topics[topicIndex].questions[questionIndex].isCat) {\r\n                setCatTopic(roundData.topics[topicIndex].questions[questionIndex].topicName)\r\n                setShowCat(true);\r\n                return;\r\n            }\r\n            if (roundData.topics[topicIndex].questions[questionIndex].isAuction) {\r\n                setAuctionValue(VALUES[questionIndex] * round);\r\n                setShowAuction(true);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!isQuestionSelected) { //вернулись на главный экран\r\n            setPlayersAnswers(new Array(players.length).fill(0))\r\n\r\n            const newPlayedQuestions = playedQuestions.map((row) => row.slice()) //full copy\r\n            newPlayedQuestions[selectedTopicIndex][selectedQuestionIndex] = 1\r\n            setPlayedQuestions(newPlayedQuestions)\r\n            if (newPlayedQuestions.every(row => row.every(el => el === 1))) {\r\n                setShowFinalScore(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePlayerAnswer = (playerIndex, isCorrect, addScore) => {\r\n        if (playersAnswers[playerIndex] !== 0 || playersAnswers.some(a => a === 1)) return\r\n        const question = roundData.topics[selectedTopicIndex].questions[selectedQuestionIndex];\r\n        updateScore(playerIndex, addScore, isCorrect, question.isCat || question.isAuction)\r\n\r\n        const newPlayersAnswers = Object.assign([], playersAnswers)\r\n        newPlayersAnswers[playerIndex] = isCorrect ? 1 : -1\r\n        setPlayersAnswers(newPlayersAnswers)\r\n    }\r\n\r\n    const catPlayers = players.map((p, i) => <option disabled={p.isActive} key={i} value={i}>{p.name}</option>);\r\n\r\n    const handleCatPlayerChanged = (e) => {\r\n        setCatPlayerIndex(+e.target.value);\r\n    }\r\n\r\n    const handleCatValueChanged = (e) => {\r\n        setCatValue(+e.target.value);\r\n    }\r\n\r\n    const handlePlayCat = () => {\r\n        setShowCat(false);\r\n        let playersAnswers = new Array(players.length).fill(null).map((v, i) => i === catPlayerIndex ? 0 : -1);\r\n        setPlayersAnswers(playersAnswers);\r\n    }\r\n\r\n\r\n    const canPlayAuction = (i) => players[i].isActive || players[i].score > VALUES[selectedQuestionIndex] * round;\r\n    const getAuctionMinValue = (i) => VALUES[selectedQuestionIndex] * round;\r\n    const getAuctionMaxValue = (i) => Math.max(VALUES[selectedQuestionIndex] * round, players[i].score);\r\n\r\n\r\n    const auctionPlayers = players.map((p, i) => <option disabled={!canPlayAuction(i)} key={i} value={i}>{p.name}</option>)\r\n\r\n    const handleAuctionPlayerChanged = (e) => {\r\n        setAuctionPlayerIndex(+e.target.value);\r\n    }\r\n\r\n    const handleAuctionValueChanged = (e) => {\r\n        setAuctionValue(+e.target.value);\r\n    }\r\n\r\n    const handlePlayAuction = () => {\r\n        setShowAuction(false);\r\n        let playersAnswers = new Array(players.length).fill(null).map((v, i) => i === auctionPlayerIndex ? 0 : -1);\r\n        setPlayersAnswers(playersAnswers);\r\n    }\r\n\r\n    const topicsRows = roundData.topics.map((td, index) =>\r\n        <TopicRow\r\n            key={index}\r\n            topicIndex={index}\r\n            topic={td}\r\n            handleQuestionSelect={handleQuestionSelect}\r\n            rowPlayedQuestions={playedQuestions[index]}\r\n            values={VALUES}\r\n            round={round} />)\r\n\r\n\r\n\r\n    const showQuestion = selectedTopicIndex !== -1 && selectedQuestionIndex !== -1 && !showCat && !showAuction;\r\n    const questionValue =\r\n        !showQuestion\r\n            ? 0\r\n            : roundData.topics[selectedTopicIndex].questions[selectedQuestionIndex].isCat\r\n                ? catValue\r\n                : roundData.topics[selectedTopicIndex].questions[selectedQuestionIndex].isAuction\r\n                    ? auctionValue\r\n                    : VALUES[selectedQuestionIndex] * round;\r\n\r\n    return (\r\n        showingTopicIndex >= 0 ?\r\n            <Topic topicName={roundData.topics[showingTopicIndex].name} /> :\r\n\r\n\r\n\r\n            <div className='Gameboard' >\r\n                <div className='content'>\r\n                    {!showQuestion && topicsRows}\r\n                    {showQuestion &&\r\n                        <Question\r\n                            topicName={roundData.topics[selectedTopicIndex].name}\r\n                            question={roundData.topics[selectedTopicIndex].questions[selectedQuestionIndex].question}\r\n                            answer={roundData.topics[selectedTopicIndex].questions[selectedQuestionIndex].answer}\r\n                            limitedTime={limitedTime}\r\n                            playersAnswers={playersAnswers}\r\n                            goToGameBoard={() => handleQuestionSelect(-1, -1)}\r\n                            isFinalRound={false}\r\n                        />}\r\n                </div>\r\n\r\n                <Score\r\n                    players={players}\r\n                    canAnswer={showQuestion}\r\n                    playersAnswers={playersAnswers}\r\n                    handlePlayerAnswer={handlePlayerAnswer}\r\n                    changeScore={changeScore}\r\n                    setShowFinalScore={setShowFinalScore}\r\n                    questionValue={questionValue}\r\n                />\r\n\r\n                <Modal show={showCat} onHide={() => setShowCat(false)} centered backdrop={false}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                            Кот в мешке. Тема: {catTopic}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label htmlFor='catPlayer'>Игрок</Form.Label>\r\n                                <Form.Control as=\"select\" value={catPlayerIndex} onChange={handleCatPlayerChanged} id='catPlayer'>\r\n                                    {catPlayers}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label htmlFor='catValue'>Стоимость</Form.Label>\r\n                                <Form.Control as=\"select\" value={catValue} onChange={handleCatValueChanged} id='catValue'>\r\n                                    <option value={VALUES[0] * round}>{VALUES[0] * round}</option>\r\n                                    <option value={VALUES[VALUES.length - 1] * round}>{VALUES[VALUES.length - 1] * round}</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={handlePlayCat} block disabled={players[catPlayerIndex].isActive}>Играть вопрос</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={showAuction} onHide={() => setShowAuction(false)} centered backdrop={false}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Вопрос-аукцион</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label htmlFor='auctionPlayer'>Игрок</Form.Label>\r\n                                <Form.Control as=\"select\" value={auctionPlayerIndex} onChange={handleAuctionPlayerChanged} id='auctionPlayer'>\r\n                                    {auctionPlayers}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label htmlFor='auctionValue'>Ставка</Form.Label>\r\n                                <Form.Control as=\"input\"\r\n                                    type=\"number\"\r\n                                    step={100}\r\n                                    min={getAuctionMinValue(auctionPlayerIndex)}\r\n                                    max={getAuctionMaxValue(auctionPlayerIndex)}\r\n                                    value={auctionValue}\r\n                                    onChange={handleAuctionValueChanged}\r\n                                    id='auctionValue'\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={handlePlayAuction} block disabled={\r\n                            !(canPlayAuction(auctionPlayerIndex)\r\n                                && auctionValue >= getAuctionMinValue(auctionPlayerIndex)\r\n                                && auctionValue <= getAuctionMaxValue(auctionPlayerIndex))\r\n                        }>Играть вопрос</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </div >\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport Question from './Question';\r\nimport { FINAL_ROUND_TIME_SECS } from '../helpers/constants';\r\nimport Score from './Score';\r\n\r\nexport default function FinalRound(props) {\r\n    const { finalRoundData, players, changeScore, setShowFinalScore } = props;\r\n    const [questions, setQuestions] = useState([...finalRoundData.questions]);\r\n    const [finalQuestion, setFinalQuestion] = useState(null)\r\n\r\n    const handleTopicClick = (id) => {\r\n        if (questions.length === 1) {\r\n            setFinalQuestion(questions[0]);\r\n        }\r\n        setQuestions(questions.filter(q => q.id !== id));\r\n    }\r\n\r\n    const topics = questions.map(q => (\r\n        <Button key={q.id} block variant='warning mt-2 mb-2 btn-lg' onClick={() => handleTopicClick(q.id)}>{q.topicName}</Button>\r\n    ))\r\n\r\n    return (\r\n        <div className='final-round-container'>\r\n            <Container className='final-round-topics-container'>\r\n                {!finalQuestion && topics}\r\n                {finalQuestion && <Question\r\n                    topicName={finalQuestion.topicName}\r\n                    question={finalQuestion.question}\r\n                    answer={finalQuestion.answer}\r\n                    isLimitedTime={true}\r\n                    limitedTime={FINAL_ROUND_TIME_SECS}\r\n                    playersAnswers={[]}\r\n                    isFinalRound={true}\r\n                />}\r\n            </Container>\r\n\r\n            <Score\r\n                players={players}\r\n                canAnswer={false}\r\n                changeScore={changeScore}\r\n                setShowFinalScore={setShowFinalScore}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { Fragment } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function FinalScore(props) {\r\n\r\n    const { players, updateRound, isFinalRound } = props\r\n\r\n    const playersScores = players.map((p, i) => (\r\n        <Fragment key={i}>\r\n            <div className='player-name'>{p.name}</div>\r\n            <div className='player-score'>{p.score}</div>\r\n        </Fragment>\r\n    ))\r\n\r\n\r\n    return (\r\n        <div className='player-info-container-fs' onClick={updateRound}>\r\n            <div className='player-info-container-fs-grid'>\r\n                {playersScores}\r\n            </div>\r\n\r\n            {isFinalRound &&\r\n                <Link className='no-decoration' to={{pathname: '/reg', }}>\r\n                    <Button variant='warning' block>Новая игра</Button>                    \r\n                </Link>}\r\n        </div>\r\n    )\r\n\r\n}","import React, { useState } from 'react'\r\nimport Player from '../data/Players';\r\nimport TopicsTable from './TopicsTable';\r\nimport Round from './Round';\r\nimport GameBoard from './GameBoard'\r\n\r\nimport { ROUNDS_COUNT } from './../helpers/constants'\r\nimport FinalRound from './FinalRound';\r\nimport FinalScore from './FinalScore';\r\n\r\nfunction MainBoard(props) {\r\n    \r\n    const { playersNames, limitedTime, questionsPackage } = props.location\r\n\r\n    const [players, setPlayers] = useState(() => playersNames ? playersNames.map((pn, i) => new Player(pn, 0, i === 0)) : [])\r\n\r\n    const [showAllTopics, setShowAllTopics] = useState(true)\r\n\r\n    const [round, setRound] = useState(1)\r\n    const [showRound, setShowRound] = useState(false)\r\n    const [showFinalScore, setShowFinalScore] = useState(false);\r\n\r\n    let topics = questionsPackage\r\n        ? questionsPackage.rounds.map(r => r.topics).reduce((res, cur) => [...res, ...cur], []).map(topic => topic.name)\r\n        : [];\r\n\r\n    const isFinalRound = round === ROUNDS_COUNT + 1 || (questionsPackage && !questionsPackage.finalRound && round === ROUNDS_COUNT);\r\n\r\n\r\n    const hideAllTopics = () => {\r\n        setShowAllTopics(false)\r\n        setShowRound(true)\r\n    }\r\n\r\n    const hideRound = () => setShowRound(false);\r\n\r\n    const updateRound = () => {\r\n        if (!isFinalRound) {\r\n            setRound(round + 1)\r\n            setShowFinalScore(false)\r\n            setShowRound(true)\r\n\r\n            //делаем всех игроков неактивными в фильнальном раунде\r\n            if (round + 1 === ROUNDS_COUNT + 1){\r\n                const newPlayers = Object.assign([], players);\r\n                for (let np of newPlayers){\r\n                    np.isActive = false;\r\n                }\r\n                setPlayers(newPlayers);\r\n            }           \r\n        }\r\n    }\r\n\r\n    if (!playersNames) {\r\n        props.history.push('/')\r\n        return null\r\n    }\r\n\r\n    const updateScore = (playerIndex, addScore, isCorrect, isSpecialQuestion) => {\r\n        const newPlayers = Object.assign([], players)\r\n        if (isCorrect) {\r\n            newPlayers[playerIndex].score += addScore\r\n        } else {\r\n            newPlayers[playerIndex].score -= addScore;\r\n        }\r\n\r\n        if (isCorrect || isSpecialQuestion) {\r\n            for (let i = 0; i < newPlayers.length; ++i) {\r\n                newPlayers[i].isActive = (i === playerIndex)\r\n            }\r\n        }\r\n        setPlayers(newPlayers)\r\n    }\r\n\r\n    const changeScore = (playerIndex, newScore) => {\r\n        const newPlayers = Object.assign([], players)\r\n        newPlayers[playerIndex].score = newScore\r\n        setPlayers(newPlayers)\r\n    }\r\n\r\n    return (\r\n\r\n        showAllTopics\r\n\r\n            ? <TopicsTable topics={topics} hideAllTopics={hideAllTopics} />\r\n            : showRound\r\n\r\n                ? <Round round={round} hideRound={hideRound}/>\r\n                : showFinalScore\r\n                    ? <FinalScore players={players} updateRound={updateRound} isFinalRound={isFinalRound} />\r\n                    : round <= ROUNDS_COUNT\r\n                        ? <GameBoard\r\n                            players={players}\r\n                            questionsPackage={questionsPackage}\r\n                            updateScore={updateScore}\r\n                            round={round}\r\n                            roundData={questionsPackage.rounds[round - 1]}\r\n                            limitedTime={limitedTime}\r\n                            changeScore={changeScore}\r\n                            setShowFinalScore={setShowFinalScore}\r\n                        />\r\n                        : <FinalRound\r\n                            finalRoundData={questionsPackage.finalRound}\r\n                            players={players}\r\n                            changeScore={changeScore}\r\n                            setShowFinalScore={setShowFinalScore} />\r\n\r\n    )\r\n}\r\n\r\nexport default MainBoard;","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport default function Loading(){\r\n    return(\r\n        <div className='loading'>\r\n            <Spinner animation='grow' variant='warning' />\r\n        </div>\r\n    )\r\n}","import { ROUNDS_COUNT, ROUND_TOPICS_COUNT, TOPIC_QUESTIONS_COUNT, corsProxy, packageApi } from './constants'\r\n\r\nexport const parseUserFile = (userFile) => {\r\n    function readFileAsync(file) {\r\n        return new Promise((resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = (ev) =>{\r\n                let qp = JSON.parse(ev.target.result);\r\n                if (!qp.rounds || qp.rounds.length < ROUNDS_COUNT || !qp.rounds.every(r => r.topics)){\r\n                    reject(new Error(\"Содержимое файла не соотвествует шаблону\"));\r\n                }\r\n                resolve(qp);\r\n            } \r\n            reader.readAsText(file);\r\n        })\r\n    }\r\n\r\n    return readFileAsync(userFile);\r\n}\r\n\r\nexport const parseSelectedPackage = async (selectedPackageId) => {\r\n    let respose = await fetch(`${corsProxy}${packageApi}${selectedPackageId}`)\r\n    let pack = await respose.json();\r\n       \r\n    const data = pack.tours[0].questions.slice(0, ROUNDS_COUNT * ROUND_TOPICS_COUNT)\r\n    const dataTopics = data.map(d => d.question.split('\\n ')[0])\r\n    const dataQuestions = data.map(d => d.question.split('\\n ').slice(1))\r\n    const dataAnswers = data.map(d => d.answer.split('\\n '))\r\n\r\n    let questionsPackage = {\r\n        rounds: [],\r\n        finalRound: null\r\n    };\r\n\r\n    for (let i = 0; i < ROUNDS_COUNT; ++i) {\r\n        let round = {\r\n            name: `Раунд ${i + 1}`,\r\n            topics: []\r\n        };\r\n\r\n        for (let j = 0; j < ROUND_TOPICS_COUNT; ++j) {\r\n            let topic = {\r\n                name: dataTopics[i * ROUND_TOPICS_COUNT + j],\r\n                questions: []\r\n            };\r\n\r\n            for (let k = 0; k < TOPIC_QUESTIONS_COUNT; ++k) {\r\n                let question = {\r\n                    id: `${i + 1}.${j + 1}.${k + 1}`,\r\n                    question: dataQuestions[i * ROUND_TOPICS_COUNT + j][k],\r\n                    answer: dataAnswers[i * ROUND_TOPICS_COUNT + j][k]\r\n                }\r\n                topic.questions.push(question);\r\n            }\r\n\r\n            round.topics.push(topic);\r\n        }\r\n\r\n        questionsPackage.rounds.push(round);\r\n    }\r\n\r\n    return questionsPackage;\r\n}","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, Button, Container, ListGroup, Form, ToggleButtonGroup, ToggleButton, Row, Col } from 'react-bootstrap';\r\nimport Loading from './Loading';\r\nimport { parseSelectedPackage, parseUserFile } from '../helpers/parsers';\r\nimport { corsProxy, groupsApi, ANSWER_SECONDS } from '../helpers/constants'\r\n\r\nexport default function Registration(props) {\r\n    const [players, setPlayers] = useState([])\r\n    const [selectedPlayer, setSelectedPlayer] = useState(-1)\r\n    const [lastPlayerIndex, setLastPlayerIndex] = useState(0)\r\n    const [showNewPlayer, setShowNewPlayer] = useState(false)\r\n    const [newPlayerName, setNewPlayerName] = useState('');\r\n\r\n    const [packageSource, setPackageSource] = useState(0)\r\n\r\n    const [limitedTime, setLimitedTime] = useState(-1)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [packages, setPackages] = useState([])\r\n\r\n    const [userFileName, setUserFileName] = useState(\"\");\r\n    const [selectedPackegeId, setSelectedPackageId] = useState(-1);\r\n\r\n    const [questionPackage, setQuestionPackage] = useState(null)\r\n\r\n    const [showError, setShowError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const handlePlus = () => {\r\n        setNewPlayerName(`Игрок ${lastPlayerIndex + 1}`);\r\n        setShowNewPlayer(true);\r\n    }\r\n\r\n    const handleAddNewPlayer = () => {\r\n        const newPlayers = Object.assign([], players)\r\n        newPlayers.push(newPlayerName)\r\n        setLastPlayerIndex(lastPlayerIndex + 1);\r\n        setPlayers(newPlayers)\r\n        setShowNewPlayer(false);\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        const newPlayers = Object.assign([], players)\r\n        newPlayers.splice(selectedPlayer, 1)\r\n        setPlayers(newPlayers)\r\n    }\r\n\r\n    const handleChangePackageSource = (e) => {\r\n        setPackageSource(e);\r\n        if (e === 1) {//вопросы из базы\r\n            setIsLoading(true)\r\n\r\n            fetch(corsProxy + groupsApi)\r\n                .then(response => response.json())\r\n                .then(obj => {\r\n                    setPackages(obj.packages);\r\n                    //setSelectedPackageName(obj.packages[0])\r\n                })\r\n                .finally(() => setIsLoading(false))\r\n        }\r\n    }\r\n\r\n    const handleUserLoadFile = (ev) => {\r\n        const file = ev.target.files[0];\r\n        (async function () {\r\n            try {\r\n                setIsLoading(true);\r\n                let qp = await parseUserFile(file);\r\n                setUserFileName(file.name);\r\n                setQuestionPackage(qp);\r\n            } catch (err) {\r\n                setErrorMessage(err.message);\r\n                setShowError(true);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        })();\r\n    }\r\n\r\n    const handleHideError = () => {\r\n        setErrorMessage(\"\");\r\n        setShowError(false);\r\n    }\r\n\r\n    const handleHideNewPlayer = () => setShowNewPlayer(false)\r\n\r\n    const handleNewPlayerLoad = () => {\r\n        let newPlayerNameInput = document.getElementById('new-player-name');\r\n        newPlayerNameInput.select();\r\n    }\r\n\r\n    const handleSelectedPackageChanged = (e) => {\r\n        let id = e.target.value;\r\n        (async function () {\r\n            try {\r\n                setIsLoading(true);\r\n                let qp = await parseSelectedPackage(id);\r\n                setSelectedPackageId(id);\r\n                setQuestionPackage(qp);\r\n            } catch (err) {\r\n                setErrorMessage(err.message);\r\n                setShowError(true);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        })()\r\n    }\r\n\r\n    const playersInputs = players.map((p, i) => (\r\n        <ListGroup.Item className='text-center pointer player-item' active={i === selectedPlayer} key={i} onClick={() => setSelectedPlayer(i)}>\r\n            {p}\r\n        </ListGroup.Item>\r\n    ))\r\n\r\n    const packagesOptions = [<option key={-1} value={-1} disabled={true}>Выбрать пакет...</option>,\r\n    ...packages.map(p => <option key={p.id} value={p.id}>{p.title}</option>)]\r\n\r\n    const answerSecondsOptions = ANSWER_SECONDS.map(as => <option key={as} value={as}>{as === -1 ? 'Время на ответ не ограничено' : `${as} с`}</option>)\r\n\r\n\r\n    return (\r\n        isLoading\r\n            ? <Loading />\r\n            : <div className='Registration'>\r\n\r\n                <Container>\r\n\r\n                    <Form>\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col>\r\n                                <ListGroup>\r\n                                    {playersInputs}\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col sm='6'>\r\n                                <Button variant='warning' onClick={handlePlus} block>Добавить игрока</Button>\r\n                            </Col>\r\n                            <Col sm='6'>\r\n                                <Button variant='danger' onClick={handleRemove} block\r\n                                    disabled={selectedPlayer < 0 || selectedPlayer >= players.length}>\r\n                                    Удалить игрока\r\n                                </Button>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col>\r\n                                <ToggleButtonGroup type=\"radio\" name=\"packageSource\" value={packageSource} onChange={handleChangePackageSource}\r\n                                    className='package-source-group d-flex'>\r\n                                    <ToggleButton variant='outline-secondary' value={0}>Вопросы из локального файла</ToggleButton>\r\n                                    <ToggleButton variant='outline-secondary' value={1}>Вопросы из базы <strong>db.chgk.info</strong></ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        {packageSource === 0 &&\r\n                            <Form.Group as={Row}>\r\n                                <Col sm='6'>\r\n                                    <div className=\"custom-file\">\r\n                                        <input type=\"file\" className=\"custom-file-input pointer\" id=\"packageFile\" accept='.json' onChange={handleUserLoadFile} required />\r\n                                        <label className=\"custom-file-label\" htmlFor=\"packageFile\" data-browse=\"Обзор...\">{userFileName !== '' ? userFileName : 'Выбрать файл с вопросами'}</label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col sm='6'>\r\n                                    <Button variant='secondary' href='/package.json' block download>Скачать шаблон</Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        }\r\n\r\n                        {packageSource === 1 &&\r\n                            <Form.Group as={Row}>\r\n                                <Col>\r\n                                    <Form.Control as=\"select\" value={selectedPackegeId} onChange={handleSelectedPackageChanged}>\r\n                                        {packagesOptions}\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        }\r\n\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Col>\r\n                                <Form.Control as=\"select\" value={limitedTime} onChange={(e) => setLimitedTime(+e.target.value)}>\r\n                                    {answerSecondsOptions}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <div className='d-flex'>\r\n                            <Link className='no-decoration ml-auto'\r\n                                to={{\r\n                                    pathname: '/game',\r\n                                    playersNames: players,\r\n                                    limitedTime: limitedTime,\r\n                                    questionsPackage: questionPackage\r\n                                }}>\r\n                                <Button disabled={!questionPackage || players.length === 0}\r\n                                    className='btn btn-warning start-game-button rounded-circle'\r\n                                    title={\r\n                                        players.length === 0\r\n                                            ? 'Добавьте хотя бы одного игрока'\r\n                                            : !questionPackage\r\n                                                ? 'Выберите игровой пакет'\r\n                                                : ''\r\n                                    }>\r\n                                    Старт\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                           \r\n\r\n                    </Form>\r\n\r\n\r\n                    <Modal show={showError} onHide={handleHideError} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Ошибка при загрузке пакета</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>{errorMessage}</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" block onClick={handleHideError}>\r\n                                Закрыть\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={showNewPlayer} onHide={handleHideNewPlayer} centered onShow={handleNewPlayerLoad}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Добавление игрока</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Control id='new-player-name' type=\"text\" placeholder=\"Введите имя\"\r\n                                value={newPlayerName} onChange={(e) => setNewPlayerName(e.target.value)} />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"warning\" onClick={handleAddNewPlayer} disabled={newPlayerName === ''}>\r\n                                Принять\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={handleHideNewPlayer}>\r\n                                Отмена\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport MainBoard from './components/MainBoard';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Registration from './components/Registration';\r\n\r\nfunction App() {\r\n  // const testQuestion = {\r\n  //   topic: 'ttt',\r\n  //   text: 'qqq'\r\n  // };\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n\r\n      <div className=\"App\">\r\n\r\n        <Switch>\r\n          <Route exact path=\"/game\" render={(props) => <MainBoard {...props} />} />        \r\n          \r\n          <Route path=\"/\">\r\n            <Registration />\r\n          </Route> \r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}